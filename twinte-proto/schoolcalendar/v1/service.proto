syntax = "proto3";
package schoolcalendar.v1;

import "schoolcalendar/v1/type.proto";
import "shared/option.proto";
import "shared/type.proto";

option go_package = "github.com/twin-te/twinte-back/handler/api/rpcgen/schoolcalendar/v1;schoolcalendarv1";

// The following error codes are not stated explicitly in the each rpc, but may be returned.
//   - shared.InvalidArgument
//   - shared.Unauthenticated
//   - shared.Unauthorized
service SchoolCalendarService {
  rpc GetEvents(GetEventsRequest) returns (GetEventsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option (shared.twinte) = {
      authentication: NOT_REQURED,
      error_codes: [],
    };
  }

  rpc GetEventsByDate(GetEventsByDateRequest) returns (GetEventsByDateResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option (shared.twinte) = {
      authentication: NOT_REQURED,
      error_codes: [],
    };
  }

  rpc GetModuleDetails(GetModuleDetailsRequest) returns (GetModuleDetailsResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option (shared.twinte) = {
      authentication: NOT_REQURED,
      error_codes: [],
    };
  }

  rpc GetModuleByDate(GetModuleByDateRequest) returns (GetModuleByDateResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option (shared.twinte) = {
      authentication: NOT_REQURED,
      error_codes: ["schoolcalendar.ModuleNotFound"],
    };
  }
}

message GetEventsRequest {
  shared.AcademicYear year = 1;
}

message GetEventsResponse {
  repeated Event events = 1;
}

message GetEventsByDateRequest {
  shared.RFC3339FullDate date = 1;
}

message GetEventsByDateResponse {
  repeated Event events = 1;
}

message GetModuleDetailsRequest {
  shared.AcademicYear year = 1;
}

message GetModuleDetailsResponse {
  repeated ModuleDetail module_details = 1;
}

message GetModuleByDateRequest {
  shared.RFC3339FullDate date = 1;
}

message GetModuleByDateResponse {
  Module module = 1;
}
