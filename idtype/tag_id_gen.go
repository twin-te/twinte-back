// Code generated by codegen/idtype/generate.py; DO NOT EDIT.

package idtype

import "github.com/google/uuid"

type TagID uuid.UUID

func (id TagID) String() string {
	return uuid.UUID(id).String()
}

func (id TagID) IsZero() bool {
	return uuid.UUID(id) == uuid.Nil
}

func NewTagID() TagID {
	return TagID(uuid.New())
}

func NewTagIDFromString(s string) (TagID, error) {
	id, err := uuid.Parse(s)
	if err != nil {
		return TagID{}, err
	}
	return TagID(id), nil
}

type TagIDs []TagID

func (ids TagIDs) StringSlice() []string {
	ret := make([]string, 0, len(ids))
	for _, id := range ids {
		ret = append(ret, id.String())
	}
	return ret
}
