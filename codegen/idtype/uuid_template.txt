// Code generated by codegen/idtype/generate.py; DO NOT EDIT.

package idtype

import "github.com/google/uuid"

type ${id_name} uuid.UUID

func (id ${id_name}) String() string {
	return uuid.UUID(id).String()
}

func (id ${id_name}) IsZero() bool {
	return uuid.UUID(id) == uuid.Nil
}

func New${id_name}() ${id_name} {
	return ${id_name}(uuid.New())
}

func New${id_name}FromString(s string) (${id_name}, error) {
	id, err := uuid.Parse(s)
	if err != nil {
		return ${id_name}{}, err
	}
	return ${id_name}(id), nil
}

type ${id_name}s []${id_name}

func (ids ${id_name}s) StringSlice() []string {
	ret := make([]string, 0, len(ids))
	for _, id := range ids {
		ret = append(ret, id.String())
	}
	return ret
}
