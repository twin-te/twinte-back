// Code generated by codegen/idtype/generate.py; DO NOT EDIT.

package idtype

import "github.com/google/uuid"

type RegisteredCourseID uuid.UUID

func (id RegisteredCourseID) String() string {
	return uuid.UUID(id).String()
}

func (id RegisteredCourseID) IsZero() bool {
	return uuid.UUID(id) == uuid.Nil
}

func NewRegisteredCourseID() RegisteredCourseID {
	return RegisteredCourseID(uuid.New())
}

func NewRegisteredCourseIDFromString(s string) (RegisteredCourseID, error) {
	id, err := uuid.Parse(s)
	if err != nil {
		return RegisteredCourseID{}, err
	}
	return RegisteredCourseID(id), nil
}

type RegisteredCourseIDs []RegisteredCourseID

func (ids RegisteredCourseIDs) StringSlice() []string {
	ret := make([]string, 0, len(ids))
	for _, id := range ids {
		ret = append(ret, id.String())
	}
	return ret
}
