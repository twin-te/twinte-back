// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: timetable/v1/service.proto

package timetablev1

import (
	sharedpb "github.com/twin-te/twinte-back/handler/api/rpcgen/sharedpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCoursesByCodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  *sharedpb.AcademicYear `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	Codes []string               `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *GetCoursesByCodesRequest) Reset() {
	*x = GetCoursesByCodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoursesByCodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoursesByCodesRequest) ProtoMessage() {}

func (x *GetCoursesByCodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoursesByCodesRequest.ProtoReflect.Descriptor instead.
func (*GetCoursesByCodesRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetCoursesByCodesRequest) GetYear() *sharedpb.AcademicYear {
	if x != nil {
		return x.Year
	}
	return nil
}

func (x *GetCoursesByCodesRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type GetCoursesByCodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *GetCoursesByCodesResponse) Reset() {
	*x = GetCoursesByCodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCoursesByCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCoursesByCodesResponse) ProtoMessage() {}

func (x *GetCoursesByCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCoursesByCodesResponse.ProtoReflect.Descriptor instead.
func (*GetCoursesByCodesResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetCoursesByCodesResponse) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type SearchCoursesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year                         *sharedpb.AcademicYear `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	Keywords                     []string               `protobuf:"bytes,2,rep,name=keywords,proto3" json:"keywords,omitempty"`
	CodePrefixesIncluded         []string               `protobuf:"bytes,3,rep,name=code_prefixes_included,json=codePrefixesIncluded,proto3" json:"code_prefixes_included,omitempty"`
	CodePrefixesExcluded         []string               `protobuf:"bytes,4,rep,name=code_prefixes_excluded,json=codePrefixesExcluded,proto3" json:"code_prefixes_excluded,omitempty"`
	SchedulesFullyIncluded       []*Schedule            `protobuf:"bytes,5,rep,name=schedules_fully_included,json=schedulesFullyIncluded,proto3" json:"schedules_fully_included,omitempty"`
	SchedulesPartiallyOverlapped []*Schedule            `protobuf:"bytes,6,rep,name=schedules_partially_overlapped,json=schedulesPartiallyOverlapped,proto3" json:"schedules_partially_overlapped,omitempty"`
	Limit                        int32                  `protobuf:"varint,7,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset                       int32                  `protobuf:"varint,8,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *SearchCoursesRequest) Reset() {
	*x = SearchCoursesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCoursesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCoursesRequest) ProtoMessage() {}

func (x *SearchCoursesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCoursesRequest.ProtoReflect.Descriptor instead.
func (*SearchCoursesRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *SearchCoursesRequest) GetYear() *sharedpb.AcademicYear {
	if x != nil {
		return x.Year
	}
	return nil
}

func (x *SearchCoursesRequest) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *SearchCoursesRequest) GetCodePrefixesIncluded() []string {
	if x != nil {
		return x.CodePrefixesIncluded
	}
	return nil
}

func (x *SearchCoursesRequest) GetCodePrefixesExcluded() []string {
	if x != nil {
		return x.CodePrefixesExcluded
	}
	return nil
}

func (x *SearchCoursesRequest) GetSchedulesFullyIncluded() []*Schedule {
	if x != nil {
		return x.SchedulesFullyIncluded
	}
	return nil
}

func (x *SearchCoursesRequest) GetSchedulesPartiallyOverlapped() []*Schedule {
	if x != nil {
		return x.SchedulesPartiallyOverlapped
	}
	return nil
}

func (x *SearchCoursesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCoursesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type SearchCoursesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Courses []*Course `protobuf:"bytes,1,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *SearchCoursesResponse) Reset() {
	*x = SearchCoursesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCoursesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCoursesResponse) ProtoMessage() {}

func (x *SearchCoursesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCoursesResponse.ProtoReflect.Descriptor instead.
func (*SearchCoursesResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{3}
}

func (x *SearchCoursesResponse) GetCourses() []*Course {
	if x != nil {
		return x.Courses
	}
	return nil
}

type CreateRegisteredCoursesByCodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year  *sharedpb.AcademicYear `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	Codes []string               `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
}

func (x *CreateRegisteredCoursesByCodesRequest) Reset() {
	*x = CreateRegisteredCoursesByCodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRegisteredCoursesByCodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegisteredCoursesByCodesRequest) ProtoMessage() {}

func (x *CreateRegisteredCoursesByCodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegisteredCoursesByCodesRequest.ProtoReflect.Descriptor instead.
func (*CreateRegisteredCoursesByCodesRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRegisteredCoursesByCodesRequest) GetYear() *sharedpb.AcademicYear {
	if x != nil {
		return x.Year
	}
	return nil
}

func (x *CreateRegisteredCoursesByCodesRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

type CreateRegisteredCoursesByCodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisteredCourses []*RegisteredCourse `protobuf:"bytes,1,rep,name=registered_courses,json=registeredCourses,proto3" json:"registered_courses,omitempty"`
}

func (x *CreateRegisteredCoursesByCodesResponse) Reset() {
	*x = CreateRegisteredCoursesByCodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRegisteredCoursesByCodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegisteredCoursesByCodesResponse) ProtoMessage() {}

func (x *CreateRegisteredCoursesByCodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegisteredCoursesByCodesResponse.ProtoReflect.Descriptor instead.
func (*CreateRegisteredCoursesByCodesResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateRegisteredCoursesByCodesResponse) GetRegisteredCourses() []*RegisteredCourse {
	if x != nil {
		return x.RegisteredCourses
	}
	return nil
}

type CreateRegisteredCourseManuallyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year        *sharedpb.AcademicYear `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Instructors string                 `protobuf:"bytes,3,opt,name=instructors,proto3" json:"instructors,omitempty"`
	Credit      string                 `protobuf:"bytes,4,opt,name=credit,proto3" json:"credit,omitempty"`
	Methods     []CourseMethod         `protobuf:"varint,5,rep,packed,name=methods,proto3,enum=timetable.v1.CourseMethod" json:"methods,omitempty"`
	Schedules   []*Schedule            `protobuf:"bytes,6,rep,name=schedules,proto3" json:"schedules,omitempty"`
}

func (x *CreateRegisteredCourseManuallyRequest) Reset() {
	*x = CreateRegisteredCourseManuallyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRegisteredCourseManuallyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegisteredCourseManuallyRequest) ProtoMessage() {}

func (x *CreateRegisteredCourseManuallyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegisteredCourseManuallyRequest.ProtoReflect.Descriptor instead.
func (*CreateRegisteredCourseManuallyRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateRegisteredCourseManuallyRequest) GetYear() *sharedpb.AcademicYear {
	if x != nil {
		return x.Year
	}
	return nil
}

func (x *CreateRegisteredCourseManuallyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRegisteredCourseManuallyRequest) GetInstructors() string {
	if x != nil {
		return x.Instructors
	}
	return ""
}

func (x *CreateRegisteredCourseManuallyRequest) GetCredit() string {
	if x != nil {
		return x.Credit
	}
	return ""
}

func (x *CreateRegisteredCourseManuallyRequest) GetMethods() []CourseMethod {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *CreateRegisteredCourseManuallyRequest) GetSchedules() []*Schedule {
	if x != nil {
		return x.Schedules
	}
	return nil
}

type CreateRegisteredCourseManuallyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisteredCourse *RegisteredCourse `protobuf:"bytes,1,opt,name=registered_course,json=registeredCourse,proto3" json:"registered_course,omitempty"`
}

func (x *CreateRegisteredCourseManuallyResponse) Reset() {
	*x = CreateRegisteredCourseManuallyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRegisteredCourseManuallyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRegisteredCourseManuallyResponse) ProtoMessage() {}

func (x *CreateRegisteredCourseManuallyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRegisteredCourseManuallyResponse.ProtoReflect.Descriptor instead.
func (*CreateRegisteredCourseManuallyResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRegisteredCourseManuallyResponse) GetRegisteredCourse() *RegisteredCourse {
	if x != nil {
		return x.RegisteredCourse
	}
	return nil
}

type GetRegisteredCoursesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Year *sharedpb.AcademicYear `protobuf:"bytes,1,opt,name=year,proto3,oneof" json:"year,omitempty"`
}

func (x *GetRegisteredCoursesRequest) Reset() {
	*x = GetRegisteredCoursesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisteredCoursesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredCoursesRequest) ProtoMessage() {}

func (x *GetRegisteredCoursesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredCoursesRequest.ProtoReflect.Descriptor instead.
func (*GetRegisteredCoursesRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetRegisteredCoursesRequest) GetYear() *sharedpb.AcademicYear {
	if x != nil {
		return x.Year
	}
	return nil
}

type GetRegisteredCoursesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisteredCourses []*RegisteredCourse `protobuf:"bytes,1,rep,name=registered_courses,json=registeredCourses,proto3" json:"registered_courses,omitempty"`
}

func (x *GetRegisteredCoursesResponse) Reset() {
	*x = GetRegisteredCoursesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegisteredCoursesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegisteredCoursesResponse) ProtoMessage() {}

func (x *GetRegisteredCoursesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegisteredCoursesResponse.ProtoReflect.Descriptor instead.
func (*GetRegisteredCoursesResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetRegisteredCoursesResponse) GetRegisteredCourses() []*RegisteredCourse {
	if x != nil {
		return x.RegisteredCourses
	}
	return nil
}

type UpdateRegisteredCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *sharedpb.UUID     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        *string            `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Instructors *string            `protobuf:"bytes,3,opt,name=instructors,proto3,oneof" json:"instructors,omitempty"`
	Credit      *string            `protobuf:"bytes,4,opt,name=credit,proto3,oneof" json:"credit,omitempty"`
	Methods     *CourseMethodList  `protobuf:"bytes,5,opt,name=methods,proto3,oneof" json:"methods,omitempty"`
	Schedules   *ScheduleList      `protobuf:"bytes,6,opt,name=schedules,proto3,oneof" json:"schedules,omitempty"`
	Memo        *string            `protobuf:"bytes,7,opt,name=memo,proto3,oneof" json:"memo,omitempty"`
	Attendance  *int32             `protobuf:"varint,8,opt,name=attendance,proto3,oneof" json:"attendance,omitempty"`
	Absence     *int32             `protobuf:"varint,9,opt,name=absence,proto3,oneof" json:"absence,omitempty"`
	Late        *int32             `protobuf:"varint,10,opt,name=late,proto3,oneof" json:"late,omitempty"`
	TagIds      *sharedpb.UUIDList `protobuf:"bytes,11,opt,name=tag_ids,json=tagIds,proto3,oneof" json:"tag_ids,omitempty"`
}

func (x *UpdateRegisteredCourseRequest) Reset() {
	*x = UpdateRegisteredCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegisteredCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegisteredCourseRequest) ProtoMessage() {}

func (x *UpdateRegisteredCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegisteredCourseRequest.ProtoReflect.Descriptor instead.
func (*UpdateRegisteredCourseRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateRegisteredCourseRequest) GetId() *sharedpb.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateRegisteredCourseRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateRegisteredCourseRequest) GetInstructors() string {
	if x != nil && x.Instructors != nil {
		return *x.Instructors
	}
	return ""
}

func (x *UpdateRegisteredCourseRequest) GetCredit() string {
	if x != nil && x.Credit != nil {
		return *x.Credit
	}
	return ""
}

func (x *UpdateRegisteredCourseRequest) GetMethods() *CourseMethodList {
	if x != nil {
		return x.Methods
	}
	return nil
}

func (x *UpdateRegisteredCourseRequest) GetSchedules() *ScheduleList {
	if x != nil {
		return x.Schedules
	}
	return nil
}

func (x *UpdateRegisteredCourseRequest) GetMemo() string {
	if x != nil && x.Memo != nil {
		return *x.Memo
	}
	return ""
}

func (x *UpdateRegisteredCourseRequest) GetAttendance() int32 {
	if x != nil && x.Attendance != nil {
		return *x.Attendance
	}
	return 0
}

func (x *UpdateRegisteredCourseRequest) GetAbsence() int32 {
	if x != nil && x.Absence != nil {
		return *x.Absence
	}
	return 0
}

func (x *UpdateRegisteredCourseRequest) GetLate() int32 {
	if x != nil && x.Late != nil {
		return *x.Late
	}
	return 0
}

func (x *UpdateRegisteredCourseRequest) GetTagIds() *sharedpb.UUIDList {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type UpdateRegisteredCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegisteredCourse *RegisteredCourse `protobuf:"bytes,1,opt,name=registered_course,json=registeredCourse,proto3" json:"registered_course,omitempty"`
}

func (x *UpdateRegisteredCourseResponse) Reset() {
	*x = UpdateRegisteredCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRegisteredCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRegisteredCourseResponse) ProtoMessage() {}

func (x *UpdateRegisteredCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRegisteredCourseResponse.ProtoReflect.Descriptor instead.
func (*UpdateRegisteredCourseResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateRegisteredCourseResponse) GetRegisteredCourse() *RegisteredCourse {
	if x != nil {
		return x.RegisteredCourse
	}
	return nil
}

type DeleteRegisteredCourseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *sharedpb.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRegisteredCourseRequest) Reset() {
	*x = DeleteRegisteredCourseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRegisteredCourseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRegisteredCourseRequest) ProtoMessage() {}

func (x *DeleteRegisteredCourseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRegisteredCourseRequest.ProtoReflect.Descriptor instead.
func (*DeleteRegisteredCourseRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteRegisteredCourseRequest) GetId() *sharedpb.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteRegisteredCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteRegisteredCourseResponse) Reset() {
	*x = DeleteRegisteredCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRegisteredCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRegisteredCourseResponse) ProtoMessage() {}

func (x *DeleteRegisteredCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRegisteredCourseResponse.ProtoReflect.Descriptor instead.
func (*DeleteRegisteredCourseResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{13}
}

type CreateTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateTagRequest) Reset() {
	*x = CreateTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagRequest) ProtoMessage() {}

func (x *CreateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagRequest.ProtoReflect.Descriptor instead.
func (*CreateTagRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{14}
}

func (x *CreateTagRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *Tag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *CreateTagResponse) Reset() {
	*x = CreateTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTagResponse) ProtoMessage() {}

func (x *CreateTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTagResponse.ProtoReflect.Descriptor instead.
func (*CreateTagResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{15}
}

func (x *CreateTagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type GetTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTagsRequest) Reset() {
	*x = GetTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagsRequest) ProtoMessage() {}

func (x *GetTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagsRequest.ProtoReflect.Descriptor instead.
func (*GetTagsRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{16}
}

type GetTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetTagsResponse) Reset() {
	*x = GetTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTagsResponse) ProtoMessage() {}

func (x *GetTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTagsResponse.ProtoReflect.Descriptor instead.
func (*GetTagsResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{17}
}

func (x *GetTagsResponse) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type UpdateTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   *sharedpb.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name *string        `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *UpdateTagRequest) Reset() {
	*x = UpdateTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagRequest) ProtoMessage() {}

func (x *UpdateTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagRequest.ProtoReflect.Descriptor instead.
func (*UpdateTagRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateTagRequest) GetId() *sharedpb.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateTagRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type UpdateTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag *Tag `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *UpdateTagResponse) Reset() {
	*x = UpdateTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagResponse) ProtoMessage() {}

func (x *UpdateTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagResponse.ProtoReflect.Descriptor instead.
func (*UpdateTagResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateTagResponse) GetTag() *Tag {
	if x != nil {
		return x.Tag
	}
	return nil
}

type DeleteTagRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *sharedpb.UUID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTagRequest) Reset() {
	*x = DeleteTagRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagRequest) ProtoMessage() {}

func (x *DeleteTagRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagRequest.ProtoReflect.Descriptor instead.
func (*DeleteTagRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteTagRequest) GetId() *sharedpb.UUID {
	if x != nil {
		return x.Id
	}
	return nil
}

type DeleteTagResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTagResponse) Reset() {
	*x = DeleteTagResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagResponse) ProtoMessage() {}

func (x *DeleteTagResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagResponse.ProtoReflect.Descriptor instead.
func (*DeleteTagResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{21}
}

type RearrangeTagsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Please specify the all tag ids that the user have.
	Ids []*sharedpb.UUID `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *RearrangeTagsRequest) Reset() {
	*x = RearrangeTagsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RearrangeTagsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RearrangeTagsRequest) ProtoMessage() {}

func (x *RearrangeTagsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RearrangeTagsRequest.ProtoReflect.Descriptor instead.
func (*RearrangeTagsRequest) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{22}
}

func (x *RearrangeTagsRequest) GetIds() []*sharedpb.UUID {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RearrangeTagsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*Tag `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *RearrangeTagsResponse) Reset() {
	*x = RearrangeTagsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_timetable_v1_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RearrangeTagsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RearrangeTagsResponse) ProtoMessage() {}

func (x *RearrangeTagsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_timetable_v1_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RearrangeTagsResponse.ProtoReflect.Descriptor instead.
func (*RearrangeTagsResponse) Descriptor() ([]byte, []int) {
	return file_timetable_v1_service_proto_rawDescGZIP(), []int{23}
}

func (x *RearrangeTagsResponse) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_timetable_v1_service_proto protoreflect.FileDescriptor

var file_timetable_v1_service_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x13, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x41,
	0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x59, 0x65, 0x61, 0x72, 0x52, 0x04, 0x79, 0x65, 0x61,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x73, 0x22, 0xa6, 0x03, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a,
	0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x2e, 0x41, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x59, 0x65, 0x61,
	0x72, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65,
	0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x64, 0x65, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x73, 0x45, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12,
	0x50, 0x0a, 0x18, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x66, 0x75, 0x6c,
	0x6c, 0x79, 0x5f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x16, 0x73, 0x63, 0x68, 0x65, 0x64,
	0x75, 0x6c, 0x65, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x79, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65,
	0x64, 0x12, 0x5c, 0x0a, 0x1e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x6c, 0x79, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x70,
	0x70, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x52, 0x1c, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x61, 0x6c, 0x6c, 0x79, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x70, 0x70, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x47, 0x0a,
	0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x22, 0x67, 0x0a, 0x25, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x73, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x28, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x41, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x59,
	0x65, 0x61, 0x72, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22,
	0x77, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x22, 0x8b, 0x02, 0x0a, 0x25, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x41, 0x63, 0x61, 0x64, 0x65, 0x6d,
	0x69, 0x63, 0x59, 0x65, 0x61, 0x72, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x12, 0x34, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x52, 0x09, 0x73, 0x63, 0x68,
	0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x26, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4b, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x10, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x22, 0x55, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2e, 0x41, 0x63, 0x61, 0x64, 0x65, 0x6d, 0x69, 0x63, 0x59, 0x65, 0x61, 0x72,
	0x48, 0x00, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x79, 0x65, 0x61, 0x72, 0x22, 0x6d, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x73, 0x22, 0xb5, 0x04, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x01, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x3d, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x03, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x3d, 0x0a, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x04,
	0x52, 0x09, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x04,
	0x6d, 0x65, 0x6d, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x65, 0x6e,
	0x64, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x48, 0x06, 0x52, 0x0a, 0x61,
	0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x61, 0x62, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x48, 0x07, 0x52,
	0x07, 0x61, 0x62, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6c,
	0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x48, 0x08, 0x52, 0x04, 0x6c, 0x61, 0x74,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x55,
	0x55, 0x49, 0x44, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x09, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64,
	0x73, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c,
	0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x61, 0x74, 0x74, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61,
	0x62, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x22, 0x6d, 0x0a, 0x1e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a,
	0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x22, 0x3d, 0x0a, 0x1d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x0a, 0x10, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x10, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x38, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x52, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x88, 0x01, 0x01, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x38, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x61, 0x67, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x30, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x55, 0x55, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36,
	0x0a, 0x14, 0x52, 0x65, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2e, 0x55, 0x55, 0x49,
	0x44, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x3e, 0x0a, 0x15, 0x52, 0x65, 0x61, 0x72, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x67,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x32, 0xfa, 0x0b, 0x0a, 0x10, 0x54, 0x69, 0x6d, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x26, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x09, 0x82, 0xb5, 0x18, 0x02, 0x08, 0x01, 0x90, 0x02, 0x01, 0x12, 0x63, 0x0a, 0x0d,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x22, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x23, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0x82, 0xb5, 0x18, 0x02, 0x08, 0x01, 0x90, 0x02,
	0x01, 0x12, 0xd6, 0x01, 0x0a, 0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x33, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x42, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x74, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73,
	0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x49, 0x82, 0xb5, 0x18, 0x45, 0x08, 0x03, 0x12, 0x18, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x27, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x41, 0x6c, 0x72,
	0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x93, 0x01, 0x0a, 0x1e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x12, 0x33, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x6c, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x82, 0xb5, 0x18, 0x02, 0x08, 0x03,
	0x12, 0x78, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x09, 0x82, 0xb5, 0x18, 0x02, 0x08, 0x03, 0x90, 0x02, 0x01, 0x12, 0x9f, 0x01, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x2b, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2a, 0x82, 0xb5, 0x18, 0x26, 0x08, 0x03, 0x12, 0x22, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x9f, 0x01, 0x0a,
	0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65,
	0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x2b, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2a, 0x82, 0xb5, 0x18, 0x26, 0x08, 0x03, 0x12, 0x22, 0x74, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x54,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x1e, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x69,
	0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x82, 0xb5,
	0x18, 0x02, 0x08, 0x03, 0x12, 0x51, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x12,
	0x1c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x09, 0x82, 0xb5,
	0x18, 0x02, 0x08, 0x03, 0x90, 0x02, 0x01, 0x12, 0x6b, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x12, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xb5, 0x18, 0x19, 0x08, 0x03, 0x12, 0x15, 0x74,
	0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x12, 0x6b, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x67, 0x12, 0x1e, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1d, 0x82, 0xb5, 0x18, 0x19, 0x08, 0x03, 0x12, 0x15, 0x74, 0x69, 0x6d, 0x65,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x54, 0x61, 0x67, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x60, 0x0a, 0x0d, 0x52, 0x65, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x61,
	0x67, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x52, 0x65, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x82, 0xb5, 0x18,
	0x02, 0x08, 0x03, 0x42, 0x4c, 0x5a, 0x4a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x77, 0x69, 0x6e, 0x2d, 0x74, 0x65, 0x2f, 0x74, 0x77, 0x69, 0x6e, 0x74, 0x65,
	0x2d, 0x62, 0x61, 0x63, 0x6b, 0x2f, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x70, 0x63, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x74, 0x69, 0x6d, 0x65, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_timetable_v1_service_proto_rawDescOnce sync.Once
	file_timetable_v1_service_proto_rawDescData = file_timetable_v1_service_proto_rawDesc
)

func file_timetable_v1_service_proto_rawDescGZIP() []byte {
	file_timetable_v1_service_proto_rawDescOnce.Do(func() {
		file_timetable_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_timetable_v1_service_proto_rawDescData)
	})
	return file_timetable_v1_service_proto_rawDescData
}

var file_timetable_v1_service_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_timetable_v1_service_proto_goTypes = []interface{}{
	(*GetCoursesByCodesRequest)(nil),               // 0: timetable.v1.GetCoursesByCodesRequest
	(*GetCoursesByCodesResponse)(nil),              // 1: timetable.v1.GetCoursesByCodesResponse
	(*SearchCoursesRequest)(nil),                   // 2: timetable.v1.SearchCoursesRequest
	(*SearchCoursesResponse)(nil),                  // 3: timetable.v1.SearchCoursesResponse
	(*CreateRegisteredCoursesByCodesRequest)(nil),  // 4: timetable.v1.CreateRegisteredCoursesByCodesRequest
	(*CreateRegisteredCoursesByCodesResponse)(nil), // 5: timetable.v1.CreateRegisteredCoursesByCodesResponse
	(*CreateRegisteredCourseManuallyRequest)(nil),  // 6: timetable.v1.CreateRegisteredCourseManuallyRequest
	(*CreateRegisteredCourseManuallyResponse)(nil), // 7: timetable.v1.CreateRegisteredCourseManuallyResponse
	(*GetRegisteredCoursesRequest)(nil),            // 8: timetable.v1.GetRegisteredCoursesRequest
	(*GetRegisteredCoursesResponse)(nil),           // 9: timetable.v1.GetRegisteredCoursesResponse
	(*UpdateRegisteredCourseRequest)(nil),          // 10: timetable.v1.UpdateRegisteredCourseRequest
	(*UpdateRegisteredCourseResponse)(nil),         // 11: timetable.v1.UpdateRegisteredCourseResponse
	(*DeleteRegisteredCourseRequest)(nil),          // 12: timetable.v1.DeleteRegisteredCourseRequest
	(*DeleteRegisteredCourseResponse)(nil),         // 13: timetable.v1.DeleteRegisteredCourseResponse
	(*CreateTagRequest)(nil),                       // 14: timetable.v1.CreateTagRequest
	(*CreateTagResponse)(nil),                      // 15: timetable.v1.CreateTagResponse
	(*GetTagsRequest)(nil),                         // 16: timetable.v1.GetTagsRequest
	(*GetTagsResponse)(nil),                        // 17: timetable.v1.GetTagsResponse
	(*UpdateTagRequest)(nil),                       // 18: timetable.v1.UpdateTagRequest
	(*UpdateTagResponse)(nil),                      // 19: timetable.v1.UpdateTagResponse
	(*DeleteTagRequest)(nil),                       // 20: timetable.v1.DeleteTagRequest
	(*DeleteTagResponse)(nil),                      // 21: timetable.v1.DeleteTagResponse
	(*RearrangeTagsRequest)(nil),                   // 22: timetable.v1.RearrangeTagsRequest
	(*RearrangeTagsResponse)(nil),                  // 23: timetable.v1.RearrangeTagsResponse
	(*sharedpb.AcademicYear)(nil),                  // 24: shared.AcademicYear
	(*Course)(nil),                                 // 25: timetable.v1.Course
	(*Schedule)(nil),                               // 26: timetable.v1.Schedule
	(*RegisteredCourse)(nil),                       // 27: timetable.v1.RegisteredCourse
	(CourseMethod)(0),                              // 28: timetable.v1.CourseMethod
	(*sharedpb.UUID)(nil),                          // 29: shared.UUID
	(*CourseMethodList)(nil),                       // 30: timetable.v1.CourseMethodList
	(*ScheduleList)(nil),                           // 31: timetable.v1.ScheduleList
	(*sharedpb.UUIDList)(nil),                      // 32: shared.UUIDList
	(*Tag)(nil),                                    // 33: timetable.v1.Tag
}
var file_timetable_v1_service_proto_depIdxs = []int32{
	24, // 0: timetable.v1.GetCoursesByCodesRequest.year:type_name -> shared.AcademicYear
	25, // 1: timetable.v1.GetCoursesByCodesResponse.courses:type_name -> timetable.v1.Course
	24, // 2: timetable.v1.SearchCoursesRequest.year:type_name -> shared.AcademicYear
	26, // 3: timetable.v1.SearchCoursesRequest.schedules_fully_included:type_name -> timetable.v1.Schedule
	26, // 4: timetable.v1.SearchCoursesRequest.schedules_partially_overlapped:type_name -> timetable.v1.Schedule
	25, // 5: timetable.v1.SearchCoursesResponse.courses:type_name -> timetable.v1.Course
	24, // 6: timetable.v1.CreateRegisteredCoursesByCodesRequest.year:type_name -> shared.AcademicYear
	27, // 7: timetable.v1.CreateRegisteredCoursesByCodesResponse.registered_courses:type_name -> timetable.v1.RegisteredCourse
	24, // 8: timetable.v1.CreateRegisteredCourseManuallyRequest.year:type_name -> shared.AcademicYear
	28, // 9: timetable.v1.CreateRegisteredCourseManuallyRequest.methods:type_name -> timetable.v1.CourseMethod
	26, // 10: timetable.v1.CreateRegisteredCourseManuallyRequest.schedules:type_name -> timetable.v1.Schedule
	27, // 11: timetable.v1.CreateRegisteredCourseManuallyResponse.registered_course:type_name -> timetable.v1.RegisteredCourse
	24, // 12: timetable.v1.GetRegisteredCoursesRequest.year:type_name -> shared.AcademicYear
	27, // 13: timetable.v1.GetRegisteredCoursesResponse.registered_courses:type_name -> timetable.v1.RegisteredCourse
	29, // 14: timetable.v1.UpdateRegisteredCourseRequest.id:type_name -> shared.UUID
	30, // 15: timetable.v1.UpdateRegisteredCourseRequest.methods:type_name -> timetable.v1.CourseMethodList
	31, // 16: timetable.v1.UpdateRegisteredCourseRequest.schedules:type_name -> timetable.v1.ScheduleList
	32, // 17: timetable.v1.UpdateRegisteredCourseRequest.tag_ids:type_name -> shared.UUIDList
	27, // 18: timetable.v1.UpdateRegisteredCourseResponse.registered_course:type_name -> timetable.v1.RegisteredCourse
	29, // 19: timetable.v1.DeleteRegisteredCourseRequest.id:type_name -> shared.UUID
	33, // 20: timetable.v1.CreateTagResponse.tag:type_name -> timetable.v1.Tag
	33, // 21: timetable.v1.GetTagsResponse.tags:type_name -> timetable.v1.Tag
	29, // 22: timetable.v1.UpdateTagRequest.id:type_name -> shared.UUID
	33, // 23: timetable.v1.UpdateTagResponse.tag:type_name -> timetable.v1.Tag
	29, // 24: timetable.v1.DeleteTagRequest.id:type_name -> shared.UUID
	29, // 25: timetable.v1.RearrangeTagsRequest.ids:type_name -> shared.UUID
	33, // 26: timetable.v1.RearrangeTagsResponse.tags:type_name -> timetable.v1.Tag
	0,  // 27: timetable.v1.TimetableService.GetCoursesByCodes:input_type -> timetable.v1.GetCoursesByCodesRequest
	2,  // 28: timetable.v1.TimetableService.SearchCourses:input_type -> timetable.v1.SearchCoursesRequest
	4,  // 29: timetable.v1.TimetableService.CreateRegisteredCoursesByCodes:input_type -> timetable.v1.CreateRegisteredCoursesByCodesRequest
	6,  // 30: timetable.v1.TimetableService.CreateRegisteredCourseManually:input_type -> timetable.v1.CreateRegisteredCourseManuallyRequest
	8,  // 31: timetable.v1.TimetableService.GetRegisteredCourses:input_type -> timetable.v1.GetRegisteredCoursesRequest
	10, // 32: timetable.v1.TimetableService.UpdateRegisteredCourse:input_type -> timetable.v1.UpdateRegisteredCourseRequest
	12, // 33: timetable.v1.TimetableService.DeleteRegisteredCourse:input_type -> timetable.v1.DeleteRegisteredCourseRequest
	14, // 34: timetable.v1.TimetableService.CreateTag:input_type -> timetable.v1.CreateTagRequest
	16, // 35: timetable.v1.TimetableService.GetTags:input_type -> timetable.v1.GetTagsRequest
	18, // 36: timetable.v1.TimetableService.UpdateTag:input_type -> timetable.v1.UpdateTagRequest
	20, // 37: timetable.v1.TimetableService.DeleteTag:input_type -> timetable.v1.DeleteTagRequest
	22, // 38: timetable.v1.TimetableService.RearrangeTags:input_type -> timetable.v1.RearrangeTagsRequest
	1,  // 39: timetable.v1.TimetableService.GetCoursesByCodes:output_type -> timetable.v1.GetCoursesByCodesResponse
	3,  // 40: timetable.v1.TimetableService.SearchCourses:output_type -> timetable.v1.SearchCoursesResponse
	5,  // 41: timetable.v1.TimetableService.CreateRegisteredCoursesByCodes:output_type -> timetable.v1.CreateRegisteredCoursesByCodesResponse
	7,  // 42: timetable.v1.TimetableService.CreateRegisteredCourseManually:output_type -> timetable.v1.CreateRegisteredCourseManuallyResponse
	9,  // 43: timetable.v1.TimetableService.GetRegisteredCourses:output_type -> timetable.v1.GetRegisteredCoursesResponse
	11, // 44: timetable.v1.TimetableService.UpdateRegisteredCourse:output_type -> timetable.v1.UpdateRegisteredCourseResponse
	13, // 45: timetable.v1.TimetableService.DeleteRegisteredCourse:output_type -> timetable.v1.DeleteRegisteredCourseResponse
	15, // 46: timetable.v1.TimetableService.CreateTag:output_type -> timetable.v1.CreateTagResponse
	17, // 47: timetable.v1.TimetableService.GetTags:output_type -> timetable.v1.GetTagsResponse
	19, // 48: timetable.v1.TimetableService.UpdateTag:output_type -> timetable.v1.UpdateTagResponse
	21, // 49: timetable.v1.TimetableService.DeleteTag:output_type -> timetable.v1.DeleteTagResponse
	23, // 50: timetable.v1.TimetableService.RearrangeTags:output_type -> timetable.v1.RearrangeTagsResponse
	39, // [39:51] is the sub-list for method output_type
	27, // [27:39] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_timetable_v1_service_proto_init() }
func file_timetable_v1_service_proto_init() {
	if File_timetable_v1_service_proto != nil {
		return
	}
	file_timetable_v1_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_timetable_v1_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoursesByCodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCoursesByCodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCoursesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCoursesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRegisteredCoursesByCodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRegisteredCoursesByCodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRegisteredCourseManuallyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRegisteredCourseManuallyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisteredCoursesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegisteredCoursesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegisteredCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRegisteredCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRegisteredCourseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRegisteredCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTagRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTagResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RearrangeTagsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_timetable_v1_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RearrangeTagsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_timetable_v1_service_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_timetable_v1_service_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_timetable_v1_service_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_timetable_v1_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_timetable_v1_service_proto_goTypes,
		DependencyIndexes: file_timetable_v1_service_proto_depIdxs,
		MessageInfos:      file_timetable_v1_service_proto_msgTypes,
	}.Build()
	File_timetable_v1_service_proto = out.File
	file_timetable_v1_service_proto_rawDesc = nil
	file_timetable_v1_service_proto_goTypes = nil
	file_timetable_v1_service_proto_depIdxs = nil
}
