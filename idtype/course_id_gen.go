// Code generated by codegen/idtype/generate.py; DO NOT EDIT.

package idtype

import "github.com/google/uuid"

type CourseID uuid.UUID

func (id CourseID) String() string {
	return uuid.UUID(id).String()
}

func (id CourseID) IsZero() bool {
	return uuid.UUID(id) == uuid.Nil
}

func NewCourseID() CourseID {
	return CourseID(uuid.New())
}

func NewCourseIDFromString(s string) (CourseID, error) {
	id, err := uuid.Parse(s)
	if err != nil {
		return CourseID{}, err
	}
	return CourseID(id), nil
}

type CourseIDs []CourseID

func (ids CourseIDs) StringSlice() []string {
	ret := make([]string, 0, len(ids))
	for _, id := range ids {
		ret = append(ret, id.String())
	}
	return ret
}
