// Code generated by SQLBoiler 4.15.0 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package dbmodel

import (
	"strconv"

	"github.com/friendsofgo/errors"
	"github.com/volatiletech/sqlboiler/v4/boil"
	"github.com/volatiletech/strmangle"
)

// M type is for providing columns and column values to UpdateAll.
type M map[string]interface{}

// ErrSyncFail occurs during insert when the record could not be retrieved in
// order to populate default value information. This usually happens when LastInsertId
// fails or there was a primary key configuration that was not resolvable.
var ErrSyncFail = errors.New("dbmodel: failed to synchronize data after insert")

type insertCache struct {
	query        string
	retQuery     string
	valueMapping []uint64
	retMapping   []uint64
}

type updateCache struct {
	query        string
	valueMapping []uint64
}

func makeCacheKey(cols boil.Columns, nzDefaults []string) string {
	buf := strmangle.GetBuffer()

	buf.WriteString(strconv.Itoa(cols.Kind))
	for _, w := range cols.Cols {
		buf.WriteString(w)
	}

	if len(nzDefaults) != 0 {
		buf.WriteByte('.')
	}
	for _, nz := range nzDefaults {
		buf.WriteString(nz)
	}

	str := buf.String()
	strmangle.PutBuffer(buf)
	return str
}

// Enum values for CourseMethodsMethodEnum
const (
	CourseMethodsMethodEnumOnlineAsynchronous string = "OnlineAsynchronous"
	CourseMethodsMethodEnumOnlineSynchronous  string = "OnlineSynchronous"
	CourseMethodsMethodEnumFaceToFace         string = "FaceToFace"
	CourseMethodsMethodEnumOthers             string = "Others"
)

func AllCourseMethodsMethodEnum() []string {
	return []string{
		CourseMethodsMethodEnumOnlineAsynchronous,
		CourseMethodsMethodEnumOnlineSynchronous,
		CourseMethodsMethodEnumFaceToFace,
		CourseMethodsMethodEnumOthers,
	}
}

// Enum values for CourseSchedulesModuleEnum
const (
	CourseSchedulesModuleEnumSpringA        string = "SpringA"
	CourseSchedulesModuleEnumSpringB        string = "SpringB"
	CourseSchedulesModuleEnumSpringC        string = "SpringC"
	CourseSchedulesModuleEnumFallA          string = "FallA"
	CourseSchedulesModuleEnumFallB          string = "FallB"
	CourseSchedulesModuleEnumFallC          string = "FallC"
	CourseSchedulesModuleEnumSummerVacation string = "SummerVacation"
	CourseSchedulesModuleEnumSpringVacation string = "SpringVacation"
	CourseSchedulesModuleEnumAnnual         string = "Annual"
	CourseSchedulesModuleEnumUnknown        string = "Unknown"
)

func AllCourseSchedulesModuleEnum() []string {
	return []string{
		CourseSchedulesModuleEnumSpringA,
		CourseSchedulesModuleEnumSpringB,
		CourseSchedulesModuleEnumSpringC,
		CourseSchedulesModuleEnumFallA,
		CourseSchedulesModuleEnumFallB,
		CourseSchedulesModuleEnumFallC,
		CourseSchedulesModuleEnumSummerVacation,
		CourseSchedulesModuleEnumSpringVacation,
		CourseSchedulesModuleEnumAnnual,
		CourseSchedulesModuleEnumUnknown,
	}
}

// Enum values for CourseSchedulesDayEnum
const (
	CourseSchedulesDayEnumSun         string = "Sun"
	CourseSchedulesDayEnumMon         string = "Mon"
	CourseSchedulesDayEnumTue         string = "Tue"
	CourseSchedulesDayEnumWed         string = "Wed"
	CourseSchedulesDayEnumThu         string = "Thu"
	CourseSchedulesDayEnumFri         string = "Fri"
	CourseSchedulesDayEnumSat         string = "Sat"
	CourseSchedulesDayEnumIntensive   string = "Intensive"
	CourseSchedulesDayEnumAppointment string = "Appointment"
	CourseSchedulesDayEnumAnyTime     string = "AnyTime"
	CourseSchedulesDayEnumUnknown     string = "Unknown"
)

func AllCourseSchedulesDayEnum() []string {
	return []string{
		CourseSchedulesDayEnumSun,
		CourseSchedulesDayEnumMon,
		CourseSchedulesDayEnumTue,
		CourseSchedulesDayEnumWed,
		CourseSchedulesDayEnumThu,
		CourseSchedulesDayEnumFri,
		CourseSchedulesDayEnumSat,
		CourseSchedulesDayEnumIntensive,
		CourseSchedulesDayEnumAppointment,
		CourseSchedulesDayEnumAnyTime,
		CourseSchedulesDayEnumUnknown,
	}
}

// Enum values for UserAuthenticationsProviderEnum
const (
	UserAuthenticationsProviderEnumGoogle  string = "Google"
	UserAuthenticationsProviderEnumTwitter string = "Twitter"
	UserAuthenticationsProviderEnumApple   string = "Apple"
)

func AllUserAuthenticationsProviderEnum() []string {
	return []string{
		UserAuthenticationsProviderEnumGoogle,
		UserAuthenticationsProviderEnumTwitter,
		UserAuthenticationsProviderEnumApple,
	}
}
